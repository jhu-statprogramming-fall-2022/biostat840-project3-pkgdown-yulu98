[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Erich Neuwirth. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Neuwirth E (2022). RColorBrewer: ColorBrewer Palettes. R package version 1.1-3, https://CRAN.R-project.org/package=RColorBrewer.","code":"@Manual{,   title = {RColorBrewer: ColorBrewer Palettes},   author = {Erich Neuwirth},   year = {2022},   note = {R package version 1.1-3},   url = {https://CRAN.R-project.org/package=RColorBrewer}, }"},{"path":"/index.html","id":"rcolorbrewer","dir":"","previous_headings":"","what":"ColorBrewer Palettes","title":"ColorBrewer Palettes","text":"goal RColorBrew provide color schemes maps (graphics) designed Cynthia Brewer described http://colorbrewer2.org.","code":""},{"path":"/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"ColorBrewer Palettes","text":"Erich Neuwirth, University Vienna, erich.neuwirth@univie.ac.","code":""},{"path":"/index.html","id":"list-of-functions","dir":"","previous_headings":"","what":"List of functions","title":"ColorBrewer Palettes","text":"[brewer.pal] - ColorBrewer palettes [display.brewer.] - ColorBrewer palettes [display.brewer.pal] - ColorBrewer palettes","code":""},{"path":"/index.html","id":"original-github-link","dir":"","previous_headings":"","what":"Original GitHub Link","title":"ColorBrewer Palettes","text":"https://github.com/yulu98/RColorBrewer.git","code":""},{"path":"/index.html","id":"customization-of-website","dir":"","previous_headings":"","what":"Customization of Website","title":"ColorBrewer Palettes","text":"Changed visual style site bootswatch Detailed customized visual style using bslib corrected height Detailed customized visual style using bslib customized color Added custom articles menu using navbar Added footer","code":""},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"ColorBrewer Palettes","text":"basic example shows solve common problem:","code":"## create a sequential palette for usage and show colors mypalette<-brewer.pal(7,\"Greens\") image(1:7,1,as.matrix(1:7),col=mypalette,xlab=\"Greens (sequential)\",        ylab=\"\",xaxt=\"n\",yaxt=\"n\",bty=\"n\") ## display a divergent palette display.brewer.pal(7,\"BrBG\") devAskNewPage(ask=TRUE) ## display a qualitative palette display.brewer.pal(7,\"Accent\") devAskNewPage(ask=TRUE) ## display a palettes simultanoeusly display.brewer.all(n=10, exact.n=FALSE) devAskNewPage(ask=TRUE) display.brewer.all(n=10) devAskNewPage(ask=TRUE) display.brewer.all() devAskNewPage(ask=TRUE) display.brewer.all(type=\"div\") devAskNewPage(ask=TRUE) display.brewer.all(type=\"seq\") devAskNewPage(ask=TRUE) display.brewer.all(type=\"qual\")  devAskNewPage(ask=TRUE) display.brewer.all(n=5,type=\"div\",exact.n=TRUE) devAskNewPage(ask=TRUE) display.brewer.all(colorblindFriendly=TRUE) devAskNewPage(ask=TRUE) brewer.pal.info brewer.pal.info[\"Blues\",] brewer.pal.info[\"Blues\",]$maxcolors"},{"path":"/reference/ColorBrewer.html","id":null,"dir":"Reference","previous_headings":"","what":"ColorBrewer palettes — RColorBrewer","title":"ColorBrewer palettes — RColorBrewer","text":"Creates nice looking color palettes especially thematic maps","code":""},{"path":"/reference/ColorBrewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ColorBrewer palettes — RColorBrewer","text":"","code":"brewer.pal(n, name) display.brewer.pal(n, name) display.brewer.all(n=NULL, type=\"all\", select=NULL, exact.n=TRUE,  colorblindFriendly=FALSE) brewer.pal.info"},{"path":"/reference/ColorBrewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ColorBrewer palettes — RColorBrewer","text":"n Number different colors palette, minimum 3,  maximum depending palette name palette name lists type One string \"div\", \"qual\", \"seq\", \"\" select list names existing palettes exact.n TRUE, display palettes color number given n colorblindFriendly TRUE, display colorblind friendly palettes","code":""},{"path":"/reference/ColorBrewer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ColorBrewer palettes — RColorBrewer","text":"brewer.pal makes color palettes ColorBrewer available R palettes. display.brewer.pal() displays selected palette graphics window. display.brewer.() displays palettes simultanueously graphics window. brewer.pal.info returns information available palettes dataframe. brewer.pal.info function, variable. might change future. details interactive palette selection tools see http://colorbrewer.org. free use, although ColorBrewer's designers appreciate cite ColorBrewer project  decide use one color schemes. 3 types palettes, sequential, diverging, qualitative. 1. Sequential palettes suited ordered data progress low high.  Lightness steps dominate look schemes, light colors low data values  dark colors high data values.   2. Diverging palettes put equal emphasis mid-range critical values extremes ends  data range. critical class break middle legend emphasized  light colors low high extremes emphasized dark colors  contrasting hues.   3. Qualitative palettes imply magnitude differences legend classes,  hues used create primary visual differences classes.  Qualitative schemes best suited representing nominal categorical data. sequential palettes names  Blues BuGn BuPu GnBu Greens Greys Oranges OrRd PuBu PuBuGn      PuRd Purples RdPu Reds YlGn YlGnBu YlOrBr YlOrRd sequential palettes available variations 3 different values 9 different values. diverging palettes  BrBG PiYG PRGn PuOr RdBu RdGy RdYlBu RdYlGn Spectral diverging palettes available variations 3 different values 11 different values. qualitative palettes, lowest number distinct values available always 3, largest number different different palettes. given together palette names following table. ColorBrewer Copyright (c) 2002 Cynthia Brewer, Mark Harrower, Pennsylvania State University.  rights reserved.  ColorBrewer palettes included R package permission copyright holder.  license details see file COPYING included package.","code":""},{"path":"/reference/ColorBrewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ColorBrewer palettes — RColorBrewer","text":"palette get error ask nonexisting palette, get warning palette asked exists many different leves asked .","code":""},{"path":"/reference/ColorBrewer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ColorBrewer palettes — RColorBrewer","text":"Erich Neuwirth, University Vienna, erich.neuwirth@univie.ac., contributions John Maindonald, Australian National University, john.maindonald@anu.edu.au","code":""},{"path":"/reference/ColorBrewer.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ColorBrewer palettes — RColorBrewer","text":"information ColorBrewer available Website,  http://www.colorbrewer.org.","code":""},{"path":"/reference/ColorBrewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ColorBrewer palettes — RColorBrewer","text":"","code":"## create a sequential palette for usage and show colors mypalette<-brewer.pal(7,\"Greens\") image(1:7,1,as.matrix(1:7),col=mypalette,xlab=\"Greens (sequential)\",        ylab=\"\",xaxt=\"n\",yaxt=\"n\",bty=\"n\")  ## display a divergent palette display.brewer.pal(7,\"BrBG\")  devAskNewPage(ask=TRUE) ## display a qualitative palette display.brewer.pal(7,\"Accent\")  devAskNewPage(ask=TRUE) ## display a palettes simultanoeusly display.brewer.all(n=10, exact.n=FALSE)  devAskNewPage(ask=TRUE) display.brewer.all(n=10)  devAskNewPage(ask=TRUE) display.brewer.all()  devAskNewPage(ask=TRUE) display.brewer.all(type=\"div\")  devAskNewPage(ask=TRUE) display.brewer.all(type=\"seq\")  devAskNewPage(ask=TRUE) display.brewer.all(type=\"qual\")   devAskNewPage(ask=TRUE) display.brewer.all(n=5,type=\"div\",exact.n=TRUE)  devAskNewPage(ask=TRUE) display.brewer.all(colorblindFriendly=TRUE)  devAskNewPage(ask=TRUE) brewer.pal.info #>          maxcolors category colorblind #> BrBG            11      div       TRUE #> PiYG            11      div       TRUE #> PRGn            11      div       TRUE #> PuOr            11      div       TRUE #> RdBu            11      div       TRUE #> RdGy            11      div      FALSE #> RdYlBu          11      div       TRUE #> RdYlGn          11      div      FALSE #> Spectral        11      div      FALSE #> Accent           8     qual      FALSE #> Dark2            8     qual       TRUE #> Paired          12     qual       TRUE #> Pastel1          9     qual      FALSE #> Pastel2          8     qual      FALSE #> Set1             9     qual      FALSE #> Set2             8     qual       TRUE #> Set3            12     qual      FALSE #> Blues            9      seq       TRUE #> BuGn             9      seq       TRUE #> BuPu             9      seq       TRUE #> GnBu             9      seq       TRUE #> Greens           9      seq       TRUE #> Greys            9      seq       TRUE #> Oranges          9      seq       TRUE #> OrRd             9      seq       TRUE #> PuBu             9      seq       TRUE #> PuBuGn           9      seq       TRUE #> PuRd             9      seq       TRUE #> Purples          9      seq       TRUE #> RdPu             9      seq       TRUE #> Reds             9      seq       TRUE #> YlGn             9      seq       TRUE #> YlGnBu           9      seq       TRUE #> YlOrBr           9      seq       TRUE #> YlOrRd           9      seq       TRUE brewer.pal.info[\"Blues\",] #>       maxcolors category colorblind #> Blues         9      seq       TRUE brewer.pal.info[\"Blues\",]$maxcolors #> [1] 9"}]
